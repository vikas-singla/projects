#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RainForestAdmin
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="rainforest_db")]
	public partial class DatabaseOperationsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_Company(TBL_Company instance);
    partial void UpdateTBL_Company(TBL_Company instance);
    partial void DeleteTBL_Company(TBL_Company instance);
    partial void InsertTBL_Company_Location(TBL_Company_Location instance);
    partial void UpdateTBL_Company_Location(TBL_Company_Location instance);
    partial void DeleteTBL_Company_Location(TBL_Company_Location instance);
    partial void InsertTBL_Company_Origin(TBL_Company_Origin instance);
    partial void UpdateTBL_Company_Origin(TBL_Company_Origin instance);
    partial void DeleteTBL_Company_Origin(TBL_Company_Origin instance);
    partial void InsertTBL_Company_Type(TBL_Company_Type instance);
    partial void UpdateTBL_Company_Type(TBL_Company_Type instance);
    partial void DeleteTBL_Company_Type(TBL_Company_Type instance);
    partial void InsertTBL_Industry(TBL_Industry instance);
    partial void UpdateTBL_Industry(TBL_Industry instance);
    partial void DeleteTBL_Industry(TBL_Industry instance);
    partial void InsertTBL_Location(TBL_Location instance);
    partial void UpdateTBL_Location(TBL_Location instance);
    partial void DeleteTBL_Location(TBL_Location instance);
    #endregion
		
		public DatabaseOperationsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOperationsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOperationsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOperationsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_Company> TBL_Companies
		{
			get
			{
				return this.GetTable<TBL_Company>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Company_Location> TBL_Company_Locations
		{
			get
			{
				return this.GetTable<TBL_Company_Location>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Company_Origin> TBL_Company_Origins
		{
			get
			{
				return this.GetTable<TBL_Company_Origin>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Company_Type> TBL_Company_Types
		{
			get
			{
				return this.GetTable<TBL_Company_Type>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Industry> TBL_Industries
		{
			get
			{
				return this.GetTable<TBL_Industry>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Location> TBL_Locations
		{
			get
			{
				return this.GetTable<TBL_Location>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Company_Pic> TBL_Company_Pics
		{
			get
			{
				return this.GetTable<TBL_Company_Pic>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Company_Head> TBL_Company_Heads
		{
			get
			{
				return this.GetTable<TBL_Company_Head>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Company")]
	public partial class TBL_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private byte _IndustryId;
		
		private string _CompanyName;
		
		private string _CompanyLogo;
		
		private System.Nullable<int> _overallEmployees;
		
		private System.Nullable<int> _overallEmployeesIndia;
		
		private string _companyurl;
		
		private string _contactinfo;
		
		private System.Nullable<bool> _Fortune1000;
		
		private string _WorkCulture;
		
		private string _Experience;
		
		private string _RecruitmentProcess;
		
		private string _Benefits;
		
		private System.Nullable<int> _companyTypeId;
		
		private System.Nullable<int> _companyOriginId;
		
		private EntityRef<TBL_Company> _TBL_Company2;
		
		private EntitySet<TBL_Company_Location> _TBL_Company_Locations;
		
		private EntityRef<TBL_Company> _TBL_Company1;
		
		private EntityRef<TBL_Industry> _TBL_Industry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnIndustryIdChanging(byte value);
    partial void OnIndustryIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyLogoChanging(string value);
    partial void OnCompanyLogoChanged();
    partial void OnoverallEmployeesChanging(System.Nullable<int> value);
    partial void OnoverallEmployeesChanged();
    partial void OnoverallEmployeesIndiaChanging(System.Nullable<int> value);
    partial void OnoverallEmployeesIndiaChanged();
    partial void OncompanyurlChanging(string value);
    partial void OncompanyurlChanged();
    partial void OncontactinfoChanging(string value);
    partial void OncontactinfoChanged();
    partial void OnFortune1000Changing(System.Nullable<bool> value);
    partial void OnFortune1000Changed();
    partial void OnWorkCultureChanging(string value);
    partial void OnWorkCultureChanged();
    partial void OnExperienceChanging(string value);
    partial void OnExperienceChanged();
    partial void OnRecruitmentProcessChanging(string value);
    partial void OnRecruitmentProcessChanged();
    partial void OnBenefitsChanging(string value);
    partial void OnBenefitsChanged();
    partial void OncompanyTypeIdChanging(System.Nullable<int> value);
    partial void OncompanyTypeIdChanged();
    partial void OncompanyOriginIdChanging(System.Nullable<int> value);
    partial void OncompanyOriginIdChanged();
    #endregion
		
		public TBL_Company()
		{
			this._TBL_Company2 = default(EntityRef<TBL_Company>);
			this._TBL_Company_Locations = new EntitySet<TBL_Company_Location>(new Action<TBL_Company_Location>(this.attach_TBL_Company_Locations), new Action<TBL_Company_Location>(this.detach_TBL_Company_Locations));
			this._TBL_Company1 = default(EntityRef<TBL_Company>);
			this._TBL_Industry = default(EntityRef<TBL_Industry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._TBL_Company1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryId", DbType="TinyInt NOT NULL")]
		public byte IndustryId
		{
			get
			{
				return this._IndustryId;
			}
			set
			{
				if ((this._IndustryId != value))
				{
					if (this._TBL_Industry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIndustryIdChanging(value);
					this.SendPropertyChanging();
					this._IndustryId = value;
					this.SendPropertyChanged("IndustryId");
					this.OnIndustryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="NVarChar(MAX)")]
		public string CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_overallEmployees", DbType="Int")]
		public System.Nullable<int> overallEmployees
		{
			get
			{
				return this._overallEmployees;
			}
			set
			{
				if ((this._overallEmployees != value))
				{
					this.OnoverallEmployeesChanging(value);
					this.SendPropertyChanging();
					this._overallEmployees = value;
					this.SendPropertyChanged("overallEmployees");
					this.OnoverallEmployeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_overallEmployeesIndia", DbType="Int")]
		public System.Nullable<int> overallEmployeesIndia
		{
			get
			{
				return this._overallEmployeesIndia;
			}
			set
			{
				if ((this._overallEmployeesIndia != value))
				{
					this.OnoverallEmployeesIndiaChanging(value);
					this.SendPropertyChanging();
					this._overallEmployeesIndia = value;
					this.SendPropertyChanged("overallEmployeesIndia");
					this.OnoverallEmployeesIndiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyurl", DbType="NVarChar(50)")]
		public string companyurl
		{
			get
			{
				return this._companyurl;
			}
			set
			{
				if ((this._companyurl != value))
				{
					this.OncompanyurlChanging(value);
					this.SendPropertyChanging();
					this._companyurl = value;
					this.SendPropertyChanged("companyurl");
					this.OncompanyurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactinfo", DbType="NVarChar(MAX)")]
		public string contactinfo
		{
			get
			{
				return this._contactinfo;
			}
			set
			{
				if ((this._contactinfo != value))
				{
					this.OncontactinfoChanging(value);
					this.SendPropertyChanging();
					this._contactinfo = value;
					this.SendPropertyChanged("contactinfo");
					this.OncontactinfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fortune1000", DbType="Bit")]
		public System.Nullable<bool> Fortune1000
		{
			get
			{
				return this._Fortune1000;
			}
			set
			{
				if ((this._Fortune1000 != value))
				{
					this.OnFortune1000Changing(value);
					this.SendPropertyChanging();
					this._Fortune1000 = value;
					this.SendPropertyChanged("Fortune1000");
					this.OnFortune1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkCulture", DbType="NVarChar(MAX)")]
		public string WorkCulture
		{
			get
			{
				return this._WorkCulture;
			}
			set
			{
				if ((this._WorkCulture != value))
				{
					this.OnWorkCultureChanging(value);
					this.SendPropertyChanging();
					this._WorkCulture = value;
					this.SendPropertyChanged("WorkCulture");
					this.OnWorkCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="NVarChar(MAX)")]
		public string Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruitmentProcess", DbType="NVarChar(MAX)")]
		public string RecruitmentProcess
		{
			get
			{
				return this._RecruitmentProcess;
			}
			set
			{
				if ((this._RecruitmentProcess != value))
				{
					this.OnRecruitmentProcessChanging(value);
					this.SendPropertyChanging();
					this._RecruitmentProcess = value;
					this.SendPropertyChanged("RecruitmentProcess");
					this.OnRecruitmentProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Benefits", DbType="NVarChar(MAX)")]
		public string Benefits
		{
			get
			{
				return this._Benefits;
			}
			set
			{
				if ((this._Benefits != value))
				{
					this.OnBenefitsChanging(value);
					this.SendPropertyChanging();
					this._Benefits = value;
					this.SendPropertyChanged("Benefits");
					this.OnBenefitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyTypeId", DbType="Int")]
		public System.Nullable<int> companyTypeId
		{
			get
			{
				return this._companyTypeId;
			}
			set
			{
				if ((this._companyTypeId != value))
				{
					this.OncompanyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._companyTypeId = value;
					this.SendPropertyChanged("companyTypeId");
					this.OncompanyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyOriginId", DbType="Int")]
		public System.Nullable<int> companyOriginId
		{
			get
			{
				return this._companyOriginId;
			}
			set
			{
				if ((this._companyOriginId != value))
				{
					this.OncompanyOriginIdChanging(value);
					this.SendPropertyChanging();
					this._companyOriginId = value;
					this.SendPropertyChanged("companyOriginId");
					this.OncompanyOriginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Company_TBL_Company", Storage="_TBL_Company2", ThisKey="CompanyId", OtherKey="CompanyId", IsUnique=true, IsForeignKey=false)]
		public TBL_Company TBL_Company2
		{
			get
			{
				return this._TBL_Company2.Entity;
			}
			set
			{
				TBL_Company previousValue = this._TBL_Company2.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Company2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Company2.Entity = null;
						previousValue.TBL_Company1 = null;
					}
					this._TBL_Company2.Entity = value;
					if ((value != null))
					{
						value.TBL_Company1 = this;
					}
					this.SendPropertyChanged("TBL_Company2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Company_TBL_Company_Location", Storage="_TBL_Company_Locations", ThisKey="CompanyId", OtherKey="companyId")]
		public EntitySet<TBL_Company_Location> TBL_Company_Locations
		{
			get
			{
				return this._TBL_Company_Locations;
			}
			set
			{
				this._TBL_Company_Locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Company_TBL_Company", Storage="_TBL_Company1", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
		public TBL_Company TBL_Company1
		{
			get
			{
				return this._TBL_Company1.Entity;
			}
			set
			{
				TBL_Company previousValue = this._TBL_Company1.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Company1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Company1.Entity = null;
						previousValue.TBL_Company2 = null;
					}
					this._TBL_Company1.Entity = value;
					if ((value != null))
					{
						value.TBL_Company2 = this;
						this._CompanyId = value.CompanyId;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("TBL_Company1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Industry_TBL_Company", Storage="_TBL_Industry", ThisKey="IndustryId", OtherKey="IndustryId", IsForeignKey=true)]
		public TBL_Industry TBL_Industry
		{
			get
			{
				return this._TBL_Industry.Entity;
			}
			set
			{
				TBL_Industry previousValue = this._TBL_Industry.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Industry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Industry.Entity = null;
						previousValue.TBL_Companies.Remove(this);
					}
					this._TBL_Industry.Entity = value;
					if ((value != null))
					{
						value.TBL_Companies.Add(this);
						this._IndustryId = value.IndustryId;
					}
					else
					{
						this._IndustryId = default(byte);
					}
					this.SendPropertyChanged("TBL_Industry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_Company_Locations(TBL_Company_Location entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Company = this;
		}
		
		private void detach_TBL_Company_Locations(TBL_Company_Location entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Company_Locations")]
	public partial class TBL_Company_Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _companyLocationId;
		
		private int _locationId;
		
		private int _companyId;
		
		private bool _isCompanyHQ;
		
		private bool _isMainOfficeOfCountry;
		
		private EntityRef<TBL_Company> _TBL_Company;
		
		private EntityRef<TBL_Location> _TBL_Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyLocationIdChanging(int value);
    partial void OncompanyLocationIdChanged();
    partial void OnlocationIdChanging(int value);
    partial void OnlocationIdChanged();
    partial void OncompanyIdChanging(int value);
    partial void OncompanyIdChanged();
    partial void OnisCompanyHQChanging(bool value);
    partial void OnisCompanyHQChanged();
    partial void OnisMainOfficeOfCountryChanging(bool value);
    partial void OnisMainOfficeOfCountryChanged();
    #endregion
		
		public TBL_Company_Location()
		{
			this._TBL_Company = default(EntityRef<TBL_Company>);
			this._TBL_Location = default(EntityRef<TBL_Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyLocationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int companyLocationId
		{
			get
			{
				return this._companyLocationId;
			}
			set
			{
				if ((this._companyLocationId != value))
				{
					this.OncompanyLocationIdChanging(value);
					this.SendPropertyChanging();
					this._companyLocationId = value;
					this.SendPropertyChanged("companyLocationId");
					this.OncompanyLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationId", DbType="Int NOT NULL")]
		public int locationId
		{
			get
			{
				return this._locationId;
			}
			set
			{
				if ((this._locationId != value))
				{
					if (this._TBL_Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationIdChanging(value);
					this.SendPropertyChanging();
					this._locationId = value;
					this.SendPropertyChanged("locationId");
					this.OnlocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="Int NOT NULL")]
		public int companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._TBL_Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCompanyHQ", DbType="Bit NOT NULL")]
		public bool isCompanyHQ
		{
			get
			{
				return this._isCompanyHQ;
			}
			set
			{
				if ((this._isCompanyHQ != value))
				{
					this.OnisCompanyHQChanging(value);
					this.SendPropertyChanging();
					this._isCompanyHQ = value;
					this.SendPropertyChanged("isCompanyHQ");
					this.OnisCompanyHQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMainOfficeOfCountry", DbType="Bit NOT NULL")]
		public bool isMainOfficeOfCountry
		{
			get
			{
				return this._isMainOfficeOfCountry;
			}
			set
			{
				if ((this._isMainOfficeOfCountry != value))
				{
					this.OnisMainOfficeOfCountryChanging(value);
					this.SendPropertyChanging();
					this._isMainOfficeOfCountry = value;
					this.SendPropertyChanged("isMainOfficeOfCountry");
					this.OnisMainOfficeOfCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Company_TBL_Company_Location", Storage="_TBL_Company", ThisKey="companyId", OtherKey="CompanyId", IsForeignKey=true)]
		public TBL_Company TBL_Company
		{
			get
			{
				return this._TBL_Company.Entity;
			}
			set
			{
				TBL_Company previousValue = this._TBL_Company.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Company.Entity = null;
						previousValue.TBL_Company_Locations.Remove(this);
					}
					this._TBL_Company.Entity = value;
					if ((value != null))
					{
						value.TBL_Company_Locations.Add(this);
						this._companyId = value.CompanyId;
					}
					else
					{
						this._companyId = default(int);
					}
					this.SendPropertyChanged("TBL_Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Location_TBL_Company_Location", Storage="_TBL_Location", ThisKey="locationId", OtherKey="LocationId", IsForeignKey=true)]
		public TBL_Location TBL_Location
		{
			get
			{
				return this._TBL_Location.Entity;
			}
			set
			{
				TBL_Location previousValue = this._TBL_Location.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Location.Entity = null;
						previousValue.TBL_Company_Locations.Remove(this);
					}
					this._TBL_Location.Entity = value;
					if ((value != null))
					{
						value.TBL_Company_Locations.Add(this);
						this._locationId = value.LocationId;
					}
					else
					{
						this._locationId = default(int);
					}
					this.SendPropertyChanged("TBL_Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Company_Origin")]
	public partial class TBL_Company_Origin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _companyOriginId;
		
		private string _origin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyOriginIdChanging(int value);
    partial void OncompanyOriginIdChanged();
    partial void OnoriginChanging(string value);
    partial void OnoriginChanged();
    #endregion
		
		public TBL_Company_Origin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyOriginId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int companyOriginId
		{
			get
			{
				return this._companyOriginId;
			}
			set
			{
				if ((this._companyOriginId != value))
				{
					this.OncompanyOriginIdChanging(value);
					this.SendPropertyChanging();
					this._companyOriginId = value;
					this.SendPropertyChanged("companyOriginId");
					this.OncompanyOriginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string origin
		{
			get
			{
				return this._origin;
			}
			set
			{
				if ((this._origin != value))
				{
					this.OnoriginChanging(value);
					this.SendPropertyChanging();
					this._origin = value;
					this.SendPropertyChanged("origin");
					this.OnoriginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Company_Type")]
	public partial class TBL_Company_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _companyTypeId;
		
		private string _companyType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyTypeIdChanging(int value);
    partial void OncompanyTypeIdChanged();
    partial void OncompanyTypeChanging(string value);
    partial void OncompanyTypeChanged();
    #endregion
		
		public TBL_Company_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int companyTypeId
		{
			get
			{
				return this._companyTypeId;
			}
			set
			{
				if ((this._companyTypeId != value))
				{
					this.OncompanyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._companyTypeId = value;
					this.SendPropertyChanged("companyTypeId");
					this.OncompanyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyType", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string companyType
		{
			get
			{
				return this._companyType;
			}
			set
			{
				if ((this._companyType != value))
				{
					this.OncompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._companyType = value;
					this.SendPropertyChanged("companyType");
					this.OncompanyTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Industry")]
	public partial class TBL_Industry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _IndustryId;
		
		private string _IndustryName;
		
		private EntitySet<TBL_Company> _TBL_Companies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIndustryIdChanging(byte value);
    partial void OnIndustryIdChanged();
    partial void OnIndustryNameChanging(string value);
    partial void OnIndustryNameChanged();
    #endregion
		
		public TBL_Industry()
		{
			this._TBL_Companies = new EntitySet<TBL_Company>(new Action<TBL_Company>(this.attach_TBL_Companies), new Action<TBL_Company>(this.detach_TBL_Companies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte IndustryId
		{
			get
			{
				return this._IndustryId;
			}
			set
			{
				if ((this._IndustryId != value))
				{
					this.OnIndustryIdChanging(value);
					this.SendPropertyChanging();
					this._IndustryId = value;
					this.SendPropertyChanged("IndustryId");
					this.OnIndustryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IndustryName
		{
			get
			{
				return this._IndustryName;
			}
			set
			{
				if ((this._IndustryName != value))
				{
					this.OnIndustryNameChanging(value);
					this.SendPropertyChanging();
					this._IndustryName = value;
					this.SendPropertyChanged("IndustryName");
					this.OnIndustryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Industry_TBL_Company", Storage="_TBL_Companies", ThisKey="IndustryId", OtherKey="IndustryId")]
		public EntitySet<TBL_Company> TBL_Companies
		{
			get
			{
				return this._TBL_Companies;
			}
			set
			{
				this._TBL_Companies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_Companies(TBL_Company entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Industry = this;
		}
		
		private void detach_TBL_Companies(TBL_Company entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Industry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Location")]
	public partial class TBL_Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationId;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _PostalCode;
		
		private EntitySet<TBL_Company_Location> _TBL_Company_Locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnAddressLine3Changing(string value);
    partial void OnAddressLine3Changed();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    #endregion
		
		public TBL_Location()
		{
			this._TBL_Company_Locations = new EntitySet<TBL_Company_Location>(new Action<TBL_Company_Location>(this.attach_TBL_Company_Locations), new Action<TBL_Company_Location>(this.detach_TBL_Company_Locations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(512)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="NVarChar(256)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine3", DbType="NVarChar(256)")]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this.OnAddressLine3Changing(value);
					this.SendPropertyChanging();
					this._AddressLine3 = value;
					this.SendPropertyChanged("AddressLine3");
					this.OnAddressLine3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Location_TBL_Company_Location", Storage="_TBL_Company_Locations", ThisKey="LocationId", OtherKey="locationId")]
		public EntitySet<TBL_Company_Location> TBL_Company_Locations
		{
			get
			{
				return this._TBL_Company_Locations;
			}
			set
			{
				this._TBL_Company_Locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_Company_Locations(TBL_Company_Location entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Location = this;
		}
		
		private void detach_TBL_Company_Locations(TBL_Company_Location entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Company_Pics")]
	public partial class TBL_Company_Pic
	{
		
		private int _CompanyPicId;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<int> _LocationId;
		
		private string _PicturePath;
		
		private string _VideoPath;
		
		public TBL_Company_Pic()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyPicId", DbType="Int NOT NULL")]
		public int CompanyPicId
		{
			get
			{
				return this._CompanyPicId;
			}
			set
			{
				if ((this._CompanyPicId != value))
				{
					this._CompanyPicId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicturePath", DbType="NVarChar(MAX)")]
		public string PicturePath
		{
			get
			{
				return this._PicturePath;
			}
			set
			{
				if ((this._PicturePath != value))
				{
					this._PicturePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPath", DbType="NVarChar(MAX)")]
		public string VideoPath
		{
			get
			{
				return this._VideoPath;
			}
			set
			{
				if ((this._VideoPath != value))
				{
					this._VideoPath = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Company_Heads")]
	public partial class TBL_Company_Head
	{
		
		private int _CompanyHeadId;
		
		private System.Nullable<int> _CompanyId;
		
		private System.Nullable<int> _LocationId;
		
		private string _HeadName;
		
		private string _Desgination;
		
		public TBL_Company_Head()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyHeadId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CompanyHeadId
		{
			get
			{
				return this._CompanyHeadId;
			}
			set
			{
				if ((this._CompanyHeadId != value))
				{
					this._CompanyHeadId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
		public System.Nullable<int> CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadName", DbType="NVarChar(MAX)")]
		public string HeadName
		{
			get
			{
				return this._HeadName;
			}
			set
			{
				if ((this._HeadName != value))
				{
					this._HeadName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desgination", DbType="NVarChar(MAX)")]
		public string Desgination
		{
			get
			{
				return this._Desgination;
			}
			set
			{
				if ((this._Desgination != value))
				{
					this._Desgination = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
