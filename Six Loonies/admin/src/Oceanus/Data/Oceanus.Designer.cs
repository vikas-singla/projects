//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OceanusModel", "FK_ServicePackages_Services", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Service), "ServicePackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.ServicePackage), true)]
[assembly: EdmRelationshipAttribute("OceanusModel", "FK_VendorLocations_CityStatesLocations", "Reference_LocationStates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Reference_LocationStates), "PhysicalVendorLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.PhysicalVendorLocation), true)]
[assembly: EdmRelationshipAttribute("OceanusModel", "FK_VirtualCitiesServed_Reference_LocationStates", "Reference_LocationStates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Reference_LocationStates), "VirtualCitiesServed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.VirtualCitiesServed), true)]
[assembly: EdmRelationshipAttribute("OceanusModel", "FK_VendorLocations_Vendors", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Vendor), "PhysicalVendorLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.PhysicalVendorLocation), true)]
[assembly: EdmRelationshipAttribute("OceanusModel", "FK_ServiceVendor", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Vendor), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.Service), true)]
[assembly: EdmRelationshipAttribute("OceanusModel", "FK_ServiceImages_Services", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Vendor), "VendorImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.VendorImage), true)]
[assembly: EdmRelationshipAttribute("OceanusModel", "FK_VirtualCitiesServed_Vendors", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Oceanus.Data.Vendor), "VirtualCitiesServed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Oceanus.Data.VirtualCitiesServed), true)]

#endregion

namespace Oceanus.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OceanusEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OceanusEntities object using the connection string found in the 'OceanusEntities' section of the application configuration file.
        /// </summary>
        public OceanusEntities() : base("name=OceanusEntities", "OceanusEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OceanusEntities object.
        /// </summary>
        public OceanusEntities(string connectionString) : base(connectionString, "OceanusEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OceanusEntities object.
        /// </summary>
        public OceanusEntities(EntityConnection connection) : base(connection, "OceanusEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Registration> Registrations
        {
            get
            {
                if ((_Registrations == null))
                {
                    _Registrations = base.CreateObjectSet<Registration>("Registrations");
                }
                return _Registrations;
            }
        }
        private ObjectSet<Registration> _Registrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServicePackage> ServicePackages
        {
            get
            {
                if ((_ServicePackages == null))
                {
                    _ServicePackages = base.CreateObjectSet<ServicePackage>("ServicePackages");
                }
                return _ServicePackages;
            }
        }
        private ObjectSet<ServicePackage> _ServicePackages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reference_LocationStates> Reference_LocationStates
        {
            get
            {
                if ((_Reference_LocationStates == null))
                {
                    _Reference_LocationStates = base.CreateObjectSet<Reference_LocationStates>("Reference_LocationStates");
                }
                return _Reference_LocationStates;
            }
        }
        private ObjectSet<Reference_LocationStates> _Reference_LocationStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VendorImage> VendorImages
        {
            get
            {
                if ((_VendorImages == null))
                {
                    _VendorImages = base.CreateObjectSet<VendorImage>("VendorImages");
                }
                return _VendorImages;
            }
        }
        private ObjectSet<VendorImage> _VendorImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhysicalVendorLocation> PhysicalVendorLocations
        {
            get
            {
                if ((_PhysicalVendorLocations == null))
                {
                    _PhysicalVendorLocations = base.CreateObjectSet<PhysicalVendorLocation>("PhysicalVendorLocations");
                }
                return _PhysicalVendorLocations;
            }
        }
        private ObjectSet<PhysicalVendorLocation> _PhysicalVendorLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VirtualCitiesServed> VirtualCitiesServed
        {
            get
            {
                if ((_VirtualCitiesServed == null))
                {
                    _VirtualCitiesServed = base.CreateObjectSet<VirtualCitiesServed>("VirtualCitiesServed");
                }
                return _VirtualCitiesServed;
            }
        }
        private ObjectSet<VirtualCitiesServed> _VirtualCitiesServed;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Registrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistrations(Registration registration)
        {
            base.AddObject("Registrations", registration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServicePackages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServicePackages(ServicePackage servicePackage)
        {
            base.AddObject("ServicePackages", servicePackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reference_LocationStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReference_LocationStates(Reference_LocationStates reference_LocationStates)
        {
            base.AddObject("Reference_LocationStates", reference_LocationStates);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VendorImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendorImages(VendorImage vendorImage)
        {
            base.AddObject("VendorImages", vendorImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhysicalVendorLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhysicalVendorLocations(PhysicalVendorLocation physicalVendorLocation)
        {
            base.AddObject("PhysicalVendorLocations", physicalVendorLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VirtualCitiesServed EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVirtualCitiesServed(VirtualCitiesServed virtualCitiesServed)
        {
            base.AddObject("VirtualCitiesServed", virtualCitiesServed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="contributingUserId">Initial value of the ContributingUserId property.</param>
        /// <param name="addedOn">Initial value of the AddedOn property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.Guid contributingUserId, global::System.DateTime addedOn)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            category.ContributingUserId = contributingUserId;
            category.AddedOn = addedOn;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContributingUserId
        {
            get
            {
                return _ContributingUserId;
            }
            set
            {
                OnContributingUserIdChanging(value);
                ReportPropertyChanging("ContributingUserId");
                _ContributingUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContributingUserId");
                OnContributingUserIdChanged();
            }
        }
        private global::System.Guid _ContributingUserId;
        partial void OnContributingUserIdChanging(global::System.Guid value);
        partial void OnContributingUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedOn
        {
            get
            {
                return _AddedOn;
            }
            set
            {
                OnAddedOnChanging(value);
                ReportPropertyChanging("AddedOn");
                _AddedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedOn");
                OnAddedOnChanged();
            }
        }
        private global::System.DateTime _AddedOn;
        partial void OnAddedOnChanging(global::System.DateTime value);
        partial void OnAddedOnChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="PhysicalVendorLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalVendorLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalVendorLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="refLocationStateId">Initial value of the RefLocationStateId property.</param>
        /// <param name="addressLine1">Initial value of the AddressLine1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        public static PhysicalVendorLocation CreatePhysicalVendorLocation(global::System.Int32 id, global::System.Int32 vendorId, global::System.Int32 refLocationStateId, global::System.String addressLine1, global::System.String city, global::System.String postalCode)
        {
            PhysicalVendorLocation physicalVendorLocation = new PhysicalVendorLocation();
            physicalVendorLocation.Id = id;
            physicalVendorLocation.VendorId = vendorId;
            physicalVendorLocation.RefLocationStateId = refLocationStateId;
            physicalVendorLocation.AddressLine1 = addressLine1;
            physicalVendorLocation.City = city;
            physicalVendorLocation.PostalCode = postalCode;
            return physicalVendorLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RefLocationStateId
        {
            get
            {
                return _RefLocationStateId;
            }
            set
            {
                OnRefLocationStateIdChanging(value);
                ReportPropertyChanging("RefLocationStateId");
                _RefLocationStateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefLocationStateId");
                OnRefLocationStateIdChanged();
            }
        }
        private global::System.Int32 _RefLocationStateId;
        partial void OnRefLocationStateIdChanging(global::System.Int32 value);
        partial void OnRefLocationStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MapUrl
        {
            get
            {
                return _MapUrl;
            }
            set
            {
                OnMapUrlChanging(value);
                ReportPropertyChanging("MapUrl");
                _MapUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MapUrl");
                OnMapUrlChanged();
            }
        }
        private global::System.String _MapUrl;
        partial void OnMapUrlChanging(global::System.String value);
        partial void OnMapUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VendorLocations_CityStatesLocations", "Reference_LocationStates")]
        public Reference_LocationStates Reference_LocationStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference_LocationStates>("OceanusModel.FK_VendorLocations_CityStatesLocations", "Reference_LocationStates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference_LocationStates>("OceanusModel.FK_VendorLocations_CityStatesLocations", "Reference_LocationStates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reference_LocationStates> Reference_LocationStatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference_LocationStates>("OceanusModel.FK_VendorLocations_CityStatesLocations", "Reference_LocationStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reference_LocationStates>("OceanusModel.FK_VendorLocations_CityStatesLocations", "Reference_LocationStates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VendorLocations_Vendors", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_VendorLocations_Vendors", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_VendorLocations_Vendors", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_VendorLocations_Vendors", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("OceanusModel.FK_VendorLocations_Vendors", "Vendor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="Reference_LocationStates")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reference_LocationStates : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reference_LocationStates object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Reference_LocationStates CreateReference_LocationStates(global::System.Int32 id, global::System.String state, global::System.String country)
        {
            Reference_LocationStates reference_LocationStates = new Reference_LocationStates();
            reference_LocationStates.Id = id;
            reference_LocationStates.State = state;
            reference_LocationStates.Country = country;
            return reference_LocationStates;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VendorLocations_CityStatesLocations", "PhysicalVendorLocation")]
        public EntityCollection<PhysicalVendorLocation> PhysicalVendorLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalVendorLocation>("OceanusModel.FK_VendorLocations_CityStatesLocations", "PhysicalVendorLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalVendorLocation>("OceanusModel.FK_VendorLocations_CityStatesLocations", "PhysicalVendorLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VirtualCitiesServed_Reference_LocationStates", "VirtualCitiesServed")]
        public EntityCollection<VirtualCitiesServed> VirtualCitiesServeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualCitiesServed>("OceanusModel.FK_VirtualCitiesServed_Reference_LocationStates", "VirtualCitiesServed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualCitiesServed>("OceanusModel.FK_VirtualCitiesServed_Reference_LocationStates", "VirtualCitiesServed", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="Registration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Registration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Registration object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Registration CreateRegistration(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String email)
        {
            Registration registration = new Registration();
            registration.Id = id;
            registration.FirstName = firstName;
            registration.LastName = lastName;
            registration.Email = email;
            return registration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="shortDescription">Initial value of the ShortDescription property.</param>
        public static Service CreateService(global::System.Int32 id, global::System.String name, global::System.Int32 vendorId, global::System.String description, global::System.String shortDescription)
        {
            Service service = new Service();
            service.Id = id;
            service.Name = name;
            service.VendorId = vendorId;
            service.Description = description;
            service.ShortDescription = shortDescription;
            return service;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_ServicePackages_Services", "ServicePackage")]
        public EntityCollection<ServicePackage> ServicePackages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServicePackage>("OceanusModel.FK_ServicePackages_Services", "ServicePackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServicePackage>("OceanusModel.FK_ServicePackages_Services", "ServicePackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_ServiceVendor", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_ServiceVendor", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_ServiceVendor", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_ServiceVendor", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("OceanusModel.FK_ServiceVendor", "Vendor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="ServicePackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServicePackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServicePackage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="serviceId">Initial value of the ServiceId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ServicePackage CreateServicePackage(global::System.Int32 id, global::System.Int32 serviceId, global::System.String description, global::System.Double price, global::System.String name)
        {
            ServicePackage servicePackage = new ServicePackage();
            servicePackage.Id = id;
            servicePackage.ServiceId = serviceId;
            servicePackage.Description = description;
            servicePackage.Price = price;
            servicePackage.Name = name;
            return servicePackage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceId
        {
            get
            {
                return _ServiceId;
            }
            set
            {
                OnServiceIdChanging(value);
                ReportPropertyChanging("ServiceId");
                _ServiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceId");
                OnServiceIdChanged();
            }
        }
        private global::System.Int32 _ServiceId;
        partial void OnServiceIdChanging(global::System.Int32 value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_ServicePackages_Services", "Service")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("OceanusModel.FK_ServicePackages_Services", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("OceanusModel.FK_ServicePackages_Services", "Service").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("OceanusModel.FK_ServicePackages_Services", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("OceanusModel.FK_ServicePackages_Services", "Service", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Vendor CreateVendor(global::System.Int32 id, global::System.String name)
        {
            Vendor vendor = new Vendor();
            vendor.Id = id;
            vendor.Name = name;
            return vendor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebsiteURL
        {
            get
            {
                return _WebsiteURL;
            }
            set
            {
                OnWebsiteURLChanging(value);
                ReportPropertyChanging("WebsiteURL");
                _WebsiteURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebsiteURL");
                OnWebsiteURLChanged();
            }
        }
        private global::System.String _WebsiteURL;
        partial void OnWebsiteURLChanging(global::System.String value);
        partial void OnWebsiteURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessPhone
        {
            get
            {
                return _BusinessPhone;
            }
            set
            {
                OnBusinessPhoneChanging(value);
                ReportPropertyChanging("BusinessPhone");
                _BusinessPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessPhone");
                OnBusinessPhoneChanged();
            }
        }
        private global::System.String _BusinessPhone;
        partial void OnBusinessPhoneChanging(global::System.String value);
        partial void OnBusinessPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPublished
        {
            get
            {
                return _IsPublished;
            }
            set
            {
                OnIsPublishedChanging(value);
                ReportPropertyChanging("IsPublished");
                _IsPublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublished");
                OnIsPublishedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPublished;
        partial void OnIsPublishedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPublishedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VendorLocations_Vendors", "PhysicalVendorLocation")]
        public EntityCollection<PhysicalVendorLocation> PhysicalVendorLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalVendorLocation>("OceanusModel.FK_VendorLocations_Vendors", "PhysicalVendorLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalVendorLocation>("OceanusModel.FK_VendorLocations_Vendors", "PhysicalVendorLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_ServiceVendor", "Service")]
        public EntityCollection<Service> Services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Service>("OceanusModel.FK_ServiceVendor", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Service>("OceanusModel.FK_ServiceVendor", "Service", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_ServiceImages_Services", "VendorImage")]
        public EntityCollection<VendorImage> VendorImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VendorImage>("OceanusModel.FK_ServiceImages_Services", "VendorImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VendorImage>("OceanusModel.FK_ServiceImages_Services", "VendorImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VirtualCitiesServed_Vendors", "VirtualCitiesServed")]
        public EntityCollection<VirtualCitiesServed> VirtualCitiesServeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VirtualCitiesServed>("OceanusModel.FK_VirtualCitiesServed_Vendors", "VirtualCitiesServed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VirtualCitiesServed>("OceanusModel.FK_VirtualCitiesServed_Vendors", "VirtualCitiesServed", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="VendorImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VendorImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VendorImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vendorId">Initial value of the vendorId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="imageUrl">Initial value of the ImageUrl property.</param>
        public static VendorImage CreateVendorImage(global::System.Int32 id, global::System.Int32 vendorId, global::System.String title, global::System.String imageUrl)
        {
            VendorImage vendorImage = new VendorImage();
            vendorImage.Id = id;
            vendorImage.vendorId = vendorId;
            vendorImage.Title = title;
            vendorImage.ImageUrl = imageUrl;
            return vendorImage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vendorId
        {
            get
            {
                return _vendorId;
            }
            set
            {
                OnvendorIdChanging(value);
                ReportPropertyChanging("vendorId");
                _vendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vendorId");
                OnvendorIdChanged();
            }
        }
        private global::System.Int32 _vendorId;
        partial void OnvendorIdChanging(global::System.Int32 value);
        partial void OnvendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sourceWebsiteName
        {
            get
            {
                return _sourceWebsiteName;
            }
            set
            {
                OnsourceWebsiteNameChanging(value);
                ReportPropertyChanging("sourceWebsiteName");
                _sourceWebsiteName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sourceWebsiteName");
                OnsourceWebsiteNameChanged();
            }
        }
        private global::System.String _sourceWebsiteName;
        partial void OnsourceWebsiteNameChanging(global::System.String value);
        partial void OnsourceWebsiteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sourceWebsiteURL
        {
            get
            {
                return _sourceWebsiteURL;
            }
            set
            {
                OnsourceWebsiteURLChanging(value);
                ReportPropertyChanging("sourceWebsiteURL");
                _sourceWebsiteURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sourceWebsiteURL");
                OnsourceWebsiteURLChanged();
            }
        }
        private global::System.String _sourceWebsiteURL;
        partial void OnsourceWebsiteURLChanging(global::System.String value);
        partial void OnsourceWebsiteURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String copyrightAuthor
        {
            get
            {
                return _copyrightAuthor;
            }
            set
            {
                OncopyrightAuthorChanging(value);
                ReportPropertyChanging("copyrightAuthor");
                _copyrightAuthor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("copyrightAuthor");
                OncopyrightAuthorChanged();
            }
        }
        private global::System.String _copyrightAuthor;
        partial void OncopyrightAuthorChanging(global::System.String value);
        partial void OncopyrightAuthorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_ServiceImages_Services", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_ServiceImages_Services", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_ServiceImages_Services", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_ServiceImages_Services", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("OceanusModel.FK_ServiceImages_Services", "Vendor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OceanusModel", Name="VirtualCitiesServed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VirtualCitiesServed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VirtualCitiesServed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vendorId">Initial value of the vendorId property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="locationStatesId">Initial value of the LocationStatesId property.</param>
        public static VirtualCitiesServed CreateVirtualCitiesServed(global::System.Int32 id, global::System.Int32 vendorId, global::System.String city, global::System.Int32 locationStatesId)
        {
            VirtualCitiesServed virtualCitiesServed = new VirtualCitiesServed();
            virtualCitiesServed.Id = id;
            virtualCitiesServed.vendorId = vendorId;
            virtualCitiesServed.City = city;
            virtualCitiesServed.LocationStatesId = locationStatesId;
            return virtualCitiesServed;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vendorId
        {
            get
            {
                return _vendorId;
            }
            set
            {
                OnvendorIdChanging(value);
                ReportPropertyChanging("vendorId");
                _vendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("vendorId");
                OnvendorIdChanged();
            }
        }
        private global::System.Int32 _vendorId;
        partial void OnvendorIdChanging(global::System.Int32 value);
        partial void OnvendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationStatesId
        {
            get
            {
                return _LocationStatesId;
            }
            set
            {
                OnLocationStatesIdChanging(value);
                ReportPropertyChanging("LocationStatesId");
                _LocationStatesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationStatesId");
                OnLocationStatesIdChanged();
            }
        }
        private global::System.Int32 _LocationStatesId;
        partial void OnLocationStatesIdChanging(global::System.Int32 value);
        partial void OnLocationStatesIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VirtualCitiesServed_Reference_LocationStates", "Reference_LocationStates")]
        public Reference_LocationStates Reference_LocationStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference_LocationStates>("OceanusModel.FK_VirtualCitiesServed_Reference_LocationStates", "Reference_LocationStates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference_LocationStates>("OceanusModel.FK_VirtualCitiesServed_Reference_LocationStates", "Reference_LocationStates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reference_LocationStates> Reference_LocationStatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reference_LocationStates>("OceanusModel.FK_VirtualCitiesServed_Reference_LocationStates", "Reference_LocationStates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reference_LocationStates>("OceanusModel.FK_VirtualCitiesServed_Reference_LocationStates", "Reference_LocationStates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OceanusModel", "FK_VirtualCitiesServed_Vendors", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_VirtualCitiesServed_Vendors", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_VirtualCitiesServed_Vendors", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("OceanusModel.FK_VirtualCitiesServed_Vendors", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("OceanusModel.FK_VirtualCitiesServed_Vendors", "Vendor", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
