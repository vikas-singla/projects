@model Oceanus.ViewModels.VendorImageViewModel

@{
    ViewBag.Title = "Create";
}
<link href="@Url.Content("~/Content/main.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.fancybox-1.3.4.pack.js")" type="text/javascript"></script>

<script type="text/javascript" src="@Url.Content("~/Scripts/uploadify/swfobject.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.js")"></script>

@using System.Web.Security

<script type="text/javascript">

    @* this is required otherwise authentication wont go through *@
    @{var auth = Request.Cookies[FormsAuthentication.FormsCookieName] == null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value;}

    @* customization info here: http://www.uploadify.com/documentation/ *@
    $(document).ready(function () {
        $('#file_upload').uploadify({
            postData: { AuthenticationToken: '@auth', Id: '@Model.VendorId' },
            //'uploaderType': 'flash',
            swf: '@Url.Content("~/Scripts/uploadify/uploadify.swf")',
            uploader: '@Url.Action("Upload", "VendorImage")',
            checkExisting: '@Url.Action("CheckExisting", "VendorImage")',
            cancelImage: '@Url.Content("~/Images/delete.png")',
            folder: '/uploads',
            queueSizeLimit: 1,
            uploadLimit: 1,
            removeCompleted: false,
            sizeLimit: '1024',
            auto: true,
            onUploadComplete: function(fileMetadata,queueMetadata){
                // set the hidden field to the file that was uploaded for submission and creation
                var targetField = $('input:hidden[name="ImageUrl"]');
                targetField.attr("value", fileMetadata.name);
            }
        });
    });
</script>


<script type="text/javascript">
    function successVendorImage(context) {

        parent.$.fancybox.close();
        parent.reloadVendorImages();

    }
</script>
<div class="main">
<h3>Create a new Vendor Portfolio Image</h3>
@using (
    Ajax.BeginForm(
        "AjaxCreatePartial",
        "VendorImage",
        null,
        new AjaxOptions()
        {
            HttpMethod = "post",
            OnSuccess = "successVendorImage"
        },
        null
    )
)
{
    @Html.ValidationSummary(true)
    <fieldset>
    
        @Html.HiddenFor(model => model.VendorId)
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SourceWebsiteName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SourceWebsiteName)
            @Html.ValidationMessageFor(model => model.SourceWebsiteName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SourceWebsiteURL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SourceWebsiteURL)
            @Html.ValidationMessageFor(model => model.SourceWebsiteURL)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CopyrightAuthor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CopyrightAuthor)
            @Html.ValidationMessageFor(model => model.CopyrightAuthor)
        </div>

        @Html.HiddenFor(m => m.ImageUrl)

        <div>
            <!-- upload dialog -->
            <input id="file_upload" name="file_upload" type="file" />
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
</div>

